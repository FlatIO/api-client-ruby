=begin
#Flat API

#The Flat API allows you to easily extend the abilities of the [Flat Platform](https://flat.io), with a wide range of use cases including the following:  * Creating and importing new music scores using MusicXML, MIDI, Guitar Pro (GP3, GP4, GP5, GPX, GP), PowerTab, TuxGuitar and MuseScore files * Browsing, updating, copying, exporting the user's scores (for example in MP3, WAV or MIDI) * Managing educational resources with Flat for Education: creating & updating the organization accounts, the classes, rosters and assignments.  The Flat API is built on HTTP. Our API is RESTful It has predictable resource URLs. It returns HTTP response codes to indicate errors. It also accepts and returns JSON in the HTTP body. The [schema](/swagger.yaml) of this API follows the [OpenAPI Initiative (OAI) specification](https://www.openapis.org/), you can use and work with [compatible Swagger tools](http://swagger.io/open-source-integrations/). This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with [W3C spec](https://www.w3.org/TR/cors/).  You can use your favorite HTTP/REST library for your programming language to use Flat's API. This specification and reference is [available on Github](https://github.com/FlatIO/api-reference).  Getting Started and learn more:  * [API Overview and introduction](https://flat.io/developers/docs/api/) * [Authentication (Personal Access Tokens or OAuth2)](https://flat.io/developers/docs/api/authentication.html) * [SDKs](https://flat.io/developers/docs/api/sdks.html) * [Rate Limits](https://flat.io/developers/docs/api/rate-limits.html) * [Changelog](https://flat.io/developers/docs/api/changelog.html) 

The version of the OpenAPI document: 2.20.0
Contact: developers@flat.io
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.3.0

=end

require 'date'
require 'time'

module FlatApi
  class AppScopes
    ACCOUNT_PUBLIC_PROFILE = "account.public_profile".freeze
    ACCOUNT_EMAIL = "account.email".freeze
    ACCOUNT_EDUCATION_PROFILE = "account.education_profile".freeze
    SCORES_READONLY = "scores.readonly".freeze
    SCORES_SOCIAL = "scores.social".freeze
    SCORES = "scores".freeze
    COLLECTIONS_READONLY = "collections.readonly".freeze
    COLLECTIONS_ADD_SCORES = "collections.add_scores".freeze
    COLLECTIONS = "collections".freeze
    EDU_RESOURCES = "edu.resources".freeze
    EDU_RESOURCES_READONLY = "edu.resources.readonly".freeze
    EDU_CLASSES = "edu.classes".freeze
    EDU_CLASSES_READONLY = "edu.classes.readonly".freeze
    EDU_ASSIGNMENTS = "edu.assignments".freeze
    EDU_ASSIGNMENTS_READONLY = "edu.assignments.readonly".freeze
    EDU_ADMIN = "edu.admin".freeze
    EDU_ADMIN_LTI = "edu.admin.lti".freeze
    EDU_ADMIN_LTI_READONLY = "edu.admin.lti.readonly".freeze
    EDU_ADMIN_USERS = "edu.admin.users".freeze
    EDU_ADMIN_USERS_READONLY = "edu.admin.users.readonly".freeze
    TASKS_READONLY = "tasks.readonly".freeze

    def self.all_vars
      @all_vars ||= [ACCOUNT_PUBLIC_PROFILE, ACCOUNT_EMAIL, ACCOUNT_EDUCATION_PROFILE, SCORES_READONLY, SCORES_SOCIAL, SCORES, COLLECTIONS_READONLY, COLLECTIONS_ADD_SCORES, COLLECTIONS, EDU_RESOURCES, EDU_RESOURCES_READONLY, EDU_CLASSES, EDU_CLASSES_READONLY, EDU_ASSIGNMENTS, EDU_ASSIGNMENTS_READONLY, EDU_ADMIN, EDU_ADMIN_LTI, EDU_ADMIN_LTI_READONLY, EDU_ADMIN_USERS, EDU_ADMIN_USERS_READONLY, TASKS_READONLY].freeze
    end

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def self.build_from_hash(value)
      new.build_from_hash(value)
    end

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def build_from_hash(value)
      return value if AppScopes.all_vars.include?(value)
      raise "Invalid ENUM value #{value} for class #AppScopes"
    end
  end
end

=begin
#Flat API

#The Flat API allows you to easily extend the abilities of the [Flat Platform](https://flat.io), with a wide range of use cases including the following:  * Creating and importing new music scores using MusicXML or MIDI files * Browsing, updating, copying, exporting the user's scores (for example in MP3, WAV or MIDI) * Managing educational resources with Flat for Education: creating & updating the organization accounts, the classes, rosters and assignments.  The Flat API is built on HTTP. Our API is RESTful It has predictable resource URLs. It returns HTTP response codes to indicate errors. It also accepts and returns JSON in the HTTP body. The [schema](/swagger.yaml) of this API follows the [OpenAPI Initiative (OAI) specification](https://www.openapis.org/), you can use and work with [compatible Swagger tools](http://swagger.io/open-source-integrations/). This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with [W3C spec](https://www.w3.org/TR/cors/).  You can use your favorite HTTP/REST library for your programming language to use Flat's API. This specification and reference is [available on Github](https://github.com/FlatIO/api-reference).  Getting Started and learn more:  * [API Overview and interoduction](https://flat.io/developers/docs/api/) * [Authentication (Personal Access Tokens or OAuth2)](https://flat.io/developers/docs/api/authentication.html) * [SDKs](https://flat.io/developers/docs/api/sdks.html) * [Rate Limits](https://flat.io/developers/docs/api/rate-limits.html) * [Changelog](https://flat.io/developers/docs/api/changelog.html) 

OpenAPI spec version: 2.5.0
Contact: developers@flat.io
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3-SNAPSHOT

=end

# Common files
require 'swagger_client/api_client'
require 'swagger_client/api_error'
require 'swagger_client/version'
require 'swagger_client/configuration'

# Models
require 'swagger_client/models/assignment'
require 'swagger_client/models/assignment_copy'
require 'swagger_client/models/assignment_creation'
require 'swagger_client/models/assignment_submission'
require 'swagger_client/models/assignment_submission_update'
require 'swagger_client/models/class_attachment_creation'
require 'swagger_client/models/class_creation'
require 'swagger_client/models/class_details'
require 'swagger_client/models/class_details_canvas'
require 'swagger_client/models/class_details_clever'
require 'swagger_client/models/class_details_google_classroom'
require 'swagger_client/models/class_details_google_drive'
require 'swagger_client/models/class_details_lti'
require 'swagger_client/models/class_roles'
require 'swagger_client/models/class_state'
require 'swagger_client/models/class_update'
require 'swagger_client/models/flat_error_response'
require 'swagger_client/models/flat_locales'
require 'swagger_client/models/google_classroom_coursework'
require 'swagger_client/models/google_classroom_submission'
require 'swagger_client/models/group'
require 'swagger_client/models/group_details'
require 'swagger_client/models/group_type'
require 'swagger_client/models/license_mode'
require 'swagger_client/models/license_sources'
require 'swagger_client/models/lms_name'
require 'swagger_client/models/lti_credentials'
require 'swagger_client/models/lti_credentials_creation'
require 'swagger_client/models/media_attachment'
require 'swagger_client/models/media_score_sharing_mode'
require 'swagger_client/models/organization_invitation'
require 'swagger_client/models/organization_invitation_creation'
require 'swagger_client/models/organization_roles'
require 'swagger_client/models/score_collaborator'
require 'swagger_client/models/score_collaborator_creation'
require 'swagger_client/models/score_comment'
require 'swagger_client/models/score_comment_context'
require 'swagger_client/models/score_comment_creation'
require 'swagger_client/models/score_comment_update'
require 'swagger_client/models/score_comments_counts'
require 'swagger_client/models/score_creation'
require 'swagger_client/models/score_creation_type'
require 'swagger_client/models/score_data'
require 'swagger_client/models/score_data_encoding'
require 'swagger_client/models/score_fork'
require 'swagger_client/models/score_license'
require 'swagger_client/models/score_likes_counts'
require 'swagger_client/models/score_modification'
require 'swagger_client/models/score_privacy'
require 'swagger_client/models/score_revision'
require 'swagger_client/models/score_revision_creation'
require 'swagger_client/models/score_revision_statistics'
require 'swagger_client/models/score_rights'
require 'swagger_client/models/score_source'
require 'swagger_client/models/score_summary'
require 'swagger_client/models/score_track'
require 'swagger_client/models/score_track_creation'
require 'swagger_client/models/score_track_point'
require 'swagger_client/models/score_track_state'
require 'swagger_client/models/score_track_type'
require 'swagger_client/models/score_track_update'
require 'swagger_client/models/score_views_counts'
require 'swagger_client/models/user_admin_update'
require 'swagger_client/models/user_basics'
require 'swagger_client/models/user_creation'
require 'swagger_client/models/user_details_admin_license'
require 'swagger_client/models/user_instruments'
require 'swagger_client/models/score_details'
require 'swagger_client/models/user_public_summary'
require 'swagger_client/models/user_details_admin'
require 'swagger_client/models/user_public'
require 'swagger_client/models/user_details'

# APIs
require 'swagger_client/api/account_api'
require 'swagger_client/api/class_api'
require 'swagger_client/api/group_api'
require 'swagger_client/api/organization_api'
require 'swagger_client/api/score_api'
require 'swagger_client/api/user_api'

module SwaggerClient
  class << self
    # Customize default settings for the SDK using block.
    #   SwaggerClient.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
